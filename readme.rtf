{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 AndaleMono;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue153;\red0\green128\blue0;}
\margl1440\margr1440\margb1800\margt1800\vieww9000\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f0\b\fs28 \cf0 \expnd0\expndtw0\kerning0
PlistReader Project\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\fs20 \cf0 \expnd0\expndtw0\kerning0
Introduction\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f1\b0 \cf0 \expnd0\expndtw0\kerning0
This library is developed to read and write Property List (PLIST) files.  These files are widely used by OsX programs.  This library easily gives you the ability to read and write those files and convert them in to useable Java Objects.  This with the intention to use them downstream in other programs.  PLIST files can be edited on the OsX platform with the Property List Editor which can be found on an OsX running machine with the Developer Tools installed.  Although PLIST files are OsX specific, this library can run on every Java compliant machine.  If more information about PLIST files is required some further reading is recommended.  Please consult the following pages: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural
\cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 http://developer.apple.com/documentation/Cocoa/Conceptual/PropertyLists/index.html
\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \uc0\u8232 
\fs20 \cf2 \expnd0\expndtw0\kerning0
\ul http://en.wikipedia.org/wiki/Property_list\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\ulnone The first is the Cocoa developer guide for PLIST files and the second is a WIKI article concerning PLIST files.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f0\b \cf0 \expnd0\expndtw0\kerning0
System Requirements
\f1\b0 \expnd0\expndtw0\kerning0
\
Your system needs java (+10.4) to be installed.  This library uses the SAX parser included in the org.apache.xerxes package.  Check if this package is installed yes or no.  If it is installed you can use the plistreader-1.0.jar file.  If the package isn\'d5t installed the plistreader-1.0-Xerxes.jar package can be used wherein the SAX parser is included.\

\f0\b \expnd0\expndtw0\kerning0
Flavours\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f1\b0 \cf0 \expnd0\expndtw0\kerning0
As mentioned above, two versions of this package are available.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
plistreader-1.0.jar  (Xerxes SAX parser need to be installed on your machine)\
plistreader-1.0-Xerxes.jar (Xerxes SAX parser included)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f0\b \cf0 \expnd0\expndtw0\kerning0
Install and Test Package\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f1\b0 \cf0 \expnd0\expndtw0\kerning0
Download the package and unzip it.  Place the PlistReader folder somewhere on your machine. To test this package on your computer you can test it in the command line.  Open a command window and navigate to the folder where the folder is saved is saved.  Go into the PlistReader folder.  There is also a test PLIST file available (the iTunes PLIST file).  Type the following in the command line (change the package name READER to the one you\'d5ve downloaded):\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f2\fs18 \cf0 \expnd0\expndtw0\kerning0
$ java -jar READER.jar test.plist\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f1\fs20 \cf0 \expnd0\expndtw0\kerning0
An output is generated and normally you can see the structured output of that PLIST file and a message that a new one has ben written to the folder of your package.  That file is named  writeTest.plist.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f0\b \cf0 \expnd0\expndtw0\kerning0
How to use the package in your program.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f1\b0 \cf0 \expnd0\expndtw0\kerning0
In the following block of code you can read how to read a PLIST file.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f2\fs18 \cf3 \expnd0\expndtw0\kerning0
//Define the file to read\cf0 \expnd0\expndtw0\kerning0
\uc0\u8232 File propertiesFile = new File(\'d2myproperties.plist\'d3);\u8232 \cf3 \expnd0\expndtw0\kerning0
//Create a reader with the PlistFactory\uc0\u8232 \cf0 \expnd0\expndtw0\kerning0
AbstractReader reader = (new PlistFactory()).createReader();\uc0\u8232 \cf3 \expnd0\expndtw0\kerning0
//Read the XML file into a PlistProperties object\cf0 \expnd0\expndtw0\kerning0
\uc0\u8232 PlistProperties props = reader.parse(propertiesFile);
\f1\fs20 \expnd0\expndtw0\kerning0
\
That\'d5s actually it.  Now some words about the PlistProperties class.   The PLIST files are always readed into a structured PlistProperties object.  This object can be used to get the values for a given key.  For example:\
//Get a given key \'d4akey\'d5, you have defined that as a string in the PLIST file\uc0\u8232 String avalue = (String) props.getProperty(\'d2akey\'d3);\
For sure you should know the structure and the keys of your own property file.  How to write then a file?\

\f2\fs18 \cf3 \expnd0\expndtw0\kerning0
//Create a writer with the PlistFactory\cf0 \expnd0\expndtw0\kerning0
\uc0\u8232 AbstractWriter writer = (new PlistFactory()).createWriter();\u8232 \cf3 \expnd0\expndtw0\kerning0
//Write it\cf0 \expnd0\expndtw0\kerning0
\uc0\u8232 writer.write(propertiesFile,props); 
\f1\fs20 \expnd0\expndtw0\kerning0
\
Check the documentation in the docs folder for more info.\uc0\u8232 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f0\b \cf0 \expnd0\expndtw0\kerning0
Author, Copyright and Licence\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural

\f1\b0 \cf0 \expnd0\expndtw0\kerning0
Gie Spaepen\uc0\u8232 University of Antwerp - Laboratory Pathophysiology\u8232 Belgium\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural\pardirnatural
\cf2 \expnd0\expndtw0\kerning0
\ul http://www.ua.ac.be\cf0 \expnd0\expndtw0\kerning0
\ulnone \
Copyright (c)2007 Gie Spaepen\
This package is licenced under GPL\
\
}